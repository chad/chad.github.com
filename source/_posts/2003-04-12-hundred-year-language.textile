---
layout: post
title: !binary |-
  SHVuZHJlZCBZZWFyIExhbmd1YWdlCg==
enki_id: 4550
---
I just finished reading Paul Graham&#8217;s fascinating essay, &quot;The
Hundred-Year Language&quot; (<a
href="http://www.paulgraham.com/hundred.html">www.paulgraham.com/hundred.html</a>).
Having recently spent some time on this topic myself, it was really
interesting to read his views on the evolution of programming languages and
the direction that he thinks things will move in the next century.

<p>
In my recent post on <a
href="index.cgi/Computing/Programming/LanguageEvolution.html,v">LanguageEvolution</a>,
I mentioned that (spoken/written) language evolution is influenced by
social factors. Language features suggesting affluence often win the
evolutionary fight as speakers strive to sound more &quot;cultured&quot; or
intelligent. Paul Graham has the following to say about programming
language research:
</p>
<pre>
   Research imposes constraining caste restrictions. In any academic field
   there are topics that are ok to work on and others that aren't.
   Unfortunately the distinction between acceptable and forbidden topics
   is usually based on how intellectual the work sounds when described
   in research papers, rather than how important it is for
   getting good results.
</pre>
<p>
So, social factors seem to be affecting language designers as well. If it
doesn&#8217;t show &quot;intellectual affluence&quot;, it&#8217;s
apparently (according to Graham) not likely to show up in research. In this
same section, Graham says that he is excited that many new languages are
being created by &quot;hackers&quot; these days (Perl, Python, Ruby, etc.)
and that there are some innovative ideas coming out of these languages. In
the context of computing history, this represents a step toward empowerment
on a wider scale. Not quite &quot;the masses&quot;, but closer.
</p>
<p>
If you&#8217;re at all interested in this kind of thing, the full article
is definitely worth a read.
</p>
